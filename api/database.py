from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
import os
from api.models.base import Base

DB_PATH = "./railway_training.db"
SQLALCHEMY_DATABASE_URL = f"sqlite:///{DB_PATH}"

if os.path.exists(DB_PATH):
    os.remove(DB_PATH)
    print("üóëÔ∏è –°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É–¥–∞–ª–µ–Ω.")

engine = create_engine(
    SQLALCHEMY_DATABASE_URL,
    connect_args={"check_same_thread": False},
    echo=True  # –í–∫–ª—é—á–∏—Ç—å –ª–æ–≥ –∑–∞–ø—Ä–æ—Å–æ–≤
)

SessionLocal = sessionmaker(
    autocommit=False,
    autoflush=False,
    bind=engine
)


def get_db():
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–µ—Å—Å–∏–π –¥–ª—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π FastAPI"""
    db = SessionLocal()
    try:
        yield db
        db.commit()
    except Exception:
        db.rollback()
        raise
    finally:
        db.close()


def create_tables():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    Base.metadata.create_all(bind=engine)
    print("–¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –≤ SQLite")